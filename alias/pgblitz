#!/bin/bash
#
# Title:      PGBlitz (Reference Title File)
# Author(s):  Admin9705
# URL:        https://pgblitz.com - http://github.pgblitz.com
# GNU:        General Public License v3.0
################################################################################
path27="/pg/stage/functions"

source "${path27}/core.sh"
source "${path27}/keyvars.sh"
source "${path27}/install.sh"
source "${path27}/pginstall.sh"

# Execute Key Variables from keyvars.sh
keyvars

# Make Critical Folders
#var59="/pg /pg/logs /pg/var /pg/data /pg/stage /pg/logs /pg/tmp"
mkdir -p /pg /pg/logs /pg/var /pg/data /pg/stage /pg/logs /pg/tmp
chmod 775 /pg /pg/logs /pg/var /pg/data /pg/stage /pg/logs /pg/tmp
chown 1000:1000 /pg /pg/logs /pg/var /pg/data /pg/stage /pg/logs /pg/tmp

# Ensures the user has proper permissions
#sudocheck

if [[ ! -e "/bin/pgblitz" ]]; then
  cp /pg/pgblitz/menu/alias/templates/pgblitz /bin/ &>/dev/null &
  chown 1000:1000 /bin/pgblitz
  chmod 0755 /bin/pgblitz
fi

# pgstage
readstage=$(jq -r '.pgstage' /pg/pgblitz/stage.json)
if [[ ! -e "/pg/var/pg.stage" ]]; then
echo "$readstage" > /pg/var/pg.stage
touch /pg/var/pg.stage; fi
storedstage=$(cat /pg/var/pg.stage)

if [[ "$readstage" != "$storedstage" ]]; then
cp /pg/stage/pgcloner/solo/stage.sh /pg/tmp/stage.sh
cp /pg/stage/pgcloner/core/primary.yml /pg/tmp/primary.yml
bash /pg/tmp/stage.sh
echo "$readstage" > /pg/var/pg.stage; fi

# if new install or update is conducted, runs through pginstall
if [ -e "/pg/var/new.install" ]; then pginstall;
elif [ -e "/pg/var/update.install" ]; then pginstall; fi
